你好，我叫***,这是我的简历
这个时候面试官会说，你好，坐，先做一下自我介绍，
你说好的
说到div+css部分的时候，可以从一下几方面来说明，自己截取需要的部分
	一、兼容性
	1、设置了float和margin，需要设置display:inline，此设置是解决ie6双倍margin的问题。
	2、span和p是内联元素，不支持margin、padding，需要设置display:block，转换为块级元素即可。
	3、margin不支持子元素对父元素的距离，只支持对同级元素或其子元素的距离。一般的，发现设置了margin后，但是模块最下方的margin-bottom失效，就是这类问题。利用margin没有好的解决方法，只能变相使用padding处理。
	4、IE6会出现子DIV撑破父DIV的情况，在父DIV中设置_zoom:1即可解决此问题。
	5、一个绝对定位的元素，在firefox下能正常显示，但在IE6、IE7中则不显示。在绝对定位元素外层加一空白div，不应用任何样式。可完美解决问题，绝对定位的元素显示出来了。目前只有一种解决方法，设置z-index、float:none、将绝对定位元素的外层设为float:none，不能解决问题。
	5、在IE6中，非浮动元素中的内容会和浮动元素的边界产生3px的空隙。解决方法，不是给做左边的div的margin-right:-3px;而是给右边的div的margin-left:-3px;(如果已经有margin-left责在原始值上减3px)，此代码需按照IE6识别代码来写。
	6、针对问题3，我的方法是布局DIV不设置任何margin和padding，内容DIV设置相应的距离，子集元素的定义不被父集元素承认的问题只出现在bottom上，那么使用空DIV，设置一个高度来占位比较好。
	7、有时设置了高度的空DIV来占位，在一些浮动块区周围不能正常解析，加上clear:both可以完美解决问题。
	8、对于内容页\细览页，大段的文字的情况，有时文字会被标点带到下一行，造成文章右侧不齐。这时使用两端对齐代码，text-align:justify; text-justify:inter-ideograph;前者针对IE，后者针对FF。有时文章中还有图片，但是图片由于两端对齐代码，不能居中，那么对图片设置 display:block; margin:0px auto;来强制居中。

	二、方法优化
	1、尽量不在父元素中设置padding，而是使用子元素的margin来解决问题。如果页面相对复杂，嵌套的div比较多，如果padding和margin混用，会造成混乱，难以调整。而有了这个方法，padding是对具体内联元素而言的，而margin是对父元素的距离而言的，比较清晰。特别情况必须使用padding来限定对父元素的距离，也可以使用。
	2、尽量少嵌套div，具体内容可以使用《ul-li》、《ol-li》、《dl-dt-dd》、《img-h2-h3-span-p》等组合来实现。
	3、两列或三列div等高，使用JS判断高度并赋值，或者使用背景图方法。尽量不采用父级margin，子级负margin来实现。CSS只是作为修饰页面和布局的作用为好。

	三、SEO
	1、细览页只能出现一次h1，相关标题使用h2或h3来体现。
	2、概览页标题尽量使用li或dt或h2来体现，使用div将不会被搜索引擎注意。
	
谈一下自己对web前端开发必备的10项CSS技巧

	CSS是web前端开发工程师的基础知识，对CSS的了解能使我们能够设计出更加美观别致的网页。使用CSS技巧来巧妙地处理CSS是非常令设计师着迷的事情。
		1. @font-face
		一种用其他服务器上的字体的好方法。很明显，如果你不能在托管服务器上找到你需要的字体，你可以在样式中使用这个方法来引入你需要的字体。
		
		2. .clearfix
		如果你没法清除元素的浮动，这是清除浮动一种方法。你可以对任何HTML元素单独使用这种方法。
		
		3. @media
		@media 可以设置你当前响应网站的媒介，它能帮助你根据用户的显示器调整网站的宽度
		
		4. transform: rotate(30deg);
		结合这些转换属性和CSS转场效果来创造有意思的动态效果。
		
		5. background-size
		这条规则帮助你在网站中适应全屏幕背景。这不像之前的CSS版本必须写很笨重的代码。
		
		6. input[type="text"]
		这个input[type="text"]选择器和其他高级选择器把你从一般水平带到高级水平非常有帮助。使用属性选择器来控制输入元素的提交版本或为一个外链增加一个图标这样很不错吧？
		
		7. margin: 0 auto;
		没有任何特定的标准来使块级元素居中。这个方法可以使块级元素在父元素中居中。
		
		8. a {outline: none;}
		在浏览你的网站的时候，点一个链接一个巨大的虚线框就横跨整个网页这将严重影响用户的心情。这个“a {outline: none;}”声明将移除这个，但为了易用性别忘了给你的链接也加上:focus状态。
		
		9. overflow: hidden
		这是最好的清除还没加载到你CSS里面的元素浮动的方法。使用它使网站的响应速度更快。
		
		10. color: rgba();
		PNG图片因为它的透明性使它在网页设计中很流行并广泛使用，但是现在你可以使用下面这种方法同样实现透明。它使用红、绿、蓝三通道并设置其不透明度值来实现透明，像0.5对应%50的不透明度。
	
接下来说到设计的时候，可以说一下你对扁平化设计的理解（针对工作几年的同学来说一定会对设计有自己的理解）
	说实话，我一直非常非常喜欢扁平化设计，具体来说就是块状的扁平化设计。对于扁平化设计的很多页面都很喜欢，我自己做网站也喜欢搞成这个样子。
	到后来，nokia的界面使用了扁平化设计，我意识到，这个设计理念正在潜移默化的影响着很多设计师，它慢慢的深入到很多人的生活中。在此，对自己的审美观小小的表扬一下。
	当然，扁平化设计在中国的很多网站，尤其是政府网站，还不适用，也许某一个小部分可以使用。所以，对于中国来说，扁平化设计貌似还处于比较前卫的视觉感受。
	那么到底什么才是扁平化设计呢，简单来说就是拒绝立体，拒绝层叠，把简洁、明快发挥到了极致。下面就引用几个例子来揭示扁平化设计吧。
	
	
谈一下你这几年工作的感想
	前端工作的几个建议
	1、DIV的架构，最好把内容和架构区别开
	架构的定义和包含内容区块的定义最好能够区别开，在CSS中可以分别为layout/main或别的名字，同一个CSS可以加标注并区别定义，layout是layout，content是content。相信我，任何时间书写的任何代码，都可能出现莫名其妙的问题，这样在比较复杂的页面上会节省你很多时间。
	2、尽量习惯兼容性高的写法
	一些普遍使用的兼容配套代码，一定要熟悉并习惯使用，例如float和display，另外，在移动终端越来越普及的当下，掌握一点移动终端的CSS写法很有必要。
	3、定义最好把参数写完整
	举个例子，有的时候，你在全局定义中写了链接的样式，所以在某个区域，链接样式不变的情况下，可以不写，但我的建议还是尽量写全。原因是，当前很多前端开发的结果并不是最终页面，我们还需要把它们嵌套上你网站管理平台的模板标签，那么一些栏目，BANNER，FOOTER等区域都是作为一个子模板来嵌套的。这样的话，在嵌套模板的全局定义有变化的时候，子模板的链接样式又没有写全，那么就会出现问题。
	4、CSS定义最好能够大部分遵照国际标准
	在定义中，如果你胡乱起名字，想起什么用什么，那么，你的样式表可读性几乎为0。甚至半个月后，你自己都难以看懂你到底写了什么，哪些定义规定了页面上的哪部分内容。所以，用通用的定义名称，既增加样式表的可维护性，同时，别人来修改你的样式表，也很一目了然，增加了可延续性。
	5、CSS中，最好把不同区块的定义区分开
	一些CSS架构产品，总是在一个DIV中引用多个样式，这些样式存在样式表的各个位置。我的意见是，那是成熟的、成系统的产品，是由一个团队集体开发而成的，而你在开发一个页面时，这么做是很酷，不过同时也增加了你的工作量，你要清晰的记得你每个定义都是什么，才能在区块中准确的引用它们，太麻烦了。所以还是各个区块分别定义，并且在样式中分开，加上标注。
	6、代码不要大小写混用
	
谈谈开发中的注意点
	前端开发的几个注意
	1、写float:left时，最好配套display:inline，把你定义居左的区块内联化，这样外边距内边距的定义时，可以兼容IE6；
	2、小于高度10像素的区块，最好配套line-height:0px; font-size:0px，可以兼容IE6/7；
	3、两侧需要等高的栏目背景，最后取横向1像素的图片作为父级区块的背景来实现，这个方法最简便，JS赋值的方法会增加进程数，自己算高度的方法容易出错；
	4、宽1000的页面，三列架构，则每列取332像素为好，三列加起来是996，留下4像素给边框装饰用；
	5、善用dl\dt\dd，ul\li等列表标签，不要通篇div，不利于搜索引擎的蜘蛛来爬，另外架构会变得不够清晰；
	6、可以使用空div来占位，很多时候比边距好使。

说说自己常用的一些js类库
	jQuery.js  zepto.js   Iscroll.js 
说说自己用过的框架
	bootstrap  swiper  angular   react
说说自己的前端工程化gulp/webpack的理解

说说自己对混合开发的理解（phoneGap/Dcloud/apiCloud/jssdk）

说说自己对软件生命周期的理解

说说自己一般在项目中负责的模块
	一般情况下，我们采取的是按劳分配，按需分配的原则，我们在前期会把这些需求变成我们的一个一个模块，然后我们再根据实际情况去分配模块，我们在开发过程中，使用git/svn去管理我们的代码，在之前的公司，我主要负责的更多的是***模块，在前期的开发中我每次都在重新写功能，写完之后我会自我总结，在下次的代码构建中，我能够让我的代码更加的简洁，功能更加的强大，因为我有一个将我写过的代码进行总结保存的良好习惯，当我在下次进行开发同样的模块时，我能够更加快速的实现，这样我就有更多的时间去学习一些新的知识，并且自己也经常会重构一些项目,最近我在学习的是***
	
	我看咱们公司主营的业务是**，我个人也对这块特别感兴趣，我的理解是**




















